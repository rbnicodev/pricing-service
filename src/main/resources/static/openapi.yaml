openapi: 3.0.3
info:
  title: Pricing Service
  description: |-
    This is a simple project to implement the development of an APIRest with Java 17 and Spring developed with hexagonal architecture. 
    As an example, this simple documentation has been created with the only existing endpoint.
    [The documentation will be updated if features are added later].
  termsOfService: http://swagger.io/terms/
  contact:
    email: rubenmsanchis.dev@gmail.com
  version: 0.0.1 - SNAPSHOT
externalDocs:
  description: Pricing Service Repository
  url: https://github.com/rbnicodev/pricing-service
servers:
  - url: api/
paths:
  /prices:
    get:
      tags:
        - Prices
      summary: Find prices by brand, product and date
      description: The price may vary depending on the date
      operationId: findPrices
      parameters:
        - name: productId
          in: query
          description: Product identifier for which you want to check the price
          required: true
          explode: true
          schema:
            type: integer
            format: int64
        - name: brandId
          in: query
          description: Brand identifier for which you want to check the price
          required: true
          explode: true
          schema:
            type: integer
            format: int64
        - name: date
          in: query
          description: Date for which you want to consult the price. If null, the date and time of execution will be assumed
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceResponse'
        '400':
          description: Invalid status value


components:
  schemas:
    PriceResponse:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        brandId:
          type: integer
          format: int64
        priceListId:
          type: integer
          format: int64
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        price:
          type: number
          format: float